name: CI

on:
    push:
        branches: [main]
    pull_request:

env:
    PORT: 3000
    BUN_ENV: 'testing'
    DATABASE_PATH: 'calendars.db'

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    build:
        name: Build Docker Image
        runs-on: ubuntu-latest
        steps:
            - name: Check out repository
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GH_TOKEN }}

            - name: Generate Image Name
              id: image-name
              run: |
                  IMAGE_URL=$(echo ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:$(echo ${{ github.sha }} | cut -c1-7) | tr '[:upper:]' '[:lower:]')
                  echo "IMAGE_URL=$IMAGE_URL" >> $GITHUB_OUTPUT

            - name: Build and push Docker Image
              uses: docker/build-push-action@v4
              with:
                  context: .
                  file: ./Dockerfile.prod
                  push: true
                  tags: ${{ steps.image-name.outputs.IMAGE_URL }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

    deploy:
        needs: ["build"]
        name: Deploy to Production
        runs-on: ubuntu-latest
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'

        environment:
            name: production
            url: https://calendar.jaw.dev/

        steps:
            - name: Generate Image Name
              id: image-name
              run: |
                  IMAGE_URL=$(echo ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:$(echo ${{ github.sha }} | cut -c1-7) | tr '[:upper:]' '[:lower:]')
                  echo "IMAGE_URL=$IMAGE_URL" >> $GITHUB_OUTPUT
            - name: Deploy Image to Server
              uses: caprover/deploy-from-github@v1.1.2
              with:
                  server: '${{ secrets.CAPROVER_SERVER }}'
                  app: '${{ secrets.APP_NAME }}'
                  token: '${{ secrets.APP_TOKEN }}'
                  image: ${{ steps.image-name.outputs.IMAGE_URL }}
