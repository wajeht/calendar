FROM golang:1.24-alpine AS builder

RUN apk add --no-cache gcc musl-dev sqlite-dev

WORKDIR /app

COPY go.mod go.sum ./

RUN go mod download

COPY . .

# Build with CGO enabled for SQLite
RUN CGO_ENABLED=1 go build -o calendar . && \
    ls -la /app/calendar

FROM alpine:latest

RUN apk --no-cache add ca-certificates sqlite

RUN addgroup -g 1001 -S calendar && adduser -S calendar -u 1001 -G calendar

# Create data directory for database
RUN mkdir -p /data && chown calendar:calendar /data

WORKDIR /app

# Copy and verify the binary
COPY --chown=calendar:calendar --from=builder /app/calendar ./calendar

# Make sure the binary is executable
RUN ls -la /app/ && \
    chmod +x /app/calendar

USER calendar

EXPOSE 80

HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost/calendar.ico || exit 1

CMD ["./calendar"]
